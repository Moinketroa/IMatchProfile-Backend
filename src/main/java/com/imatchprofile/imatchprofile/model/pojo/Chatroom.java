package com.imatchprofile.imatchprofile.model.pojo;
// Generated 8 déc. 2017 20:48:06 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Chatroom generated by hbm2java
 */
@Entity
@Table(name="chatroom"
    ,catalog="imatchprofile"
)
public class Chatroom  implements java.io.Serializable {


     private Integer chatroomId;
     private Candidate candidate;
     private Recruiter recruiter;
     private byte status;
     private Set messages = new HashSet(0);

    public Chatroom() {
    }

	
    public Chatroom(Candidate candidate, Recruiter recruiter, byte status) {
        this.candidate = candidate;
        this.recruiter = recruiter;
        this.status = status;
    }
    public Chatroom(Candidate candidate, Recruiter recruiter, byte status, Set messages) {
       this.candidate = candidate;
       this.recruiter = recruiter;
       this.status = status;
       this.messages = messages;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="chatroom_id", unique=true, nullable=false)
    public Integer getChatroomId() {
        return this.chatroomId;
    }
    
    public void setChatroomId(Integer chatroomId) {
        this.chatroomId = chatroomId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="candidate_id", nullable=false)
    public Candidate getCandidate() {
        return this.candidate;
    }
    
    public void setCandidate(Candidate candidate) {
        this.candidate = candidate;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="recruiter_id", nullable=false)
    public Recruiter getRecruiter() {
        return this.recruiter;
    }
    
    public void setRecruiter(Recruiter recruiter) {
        this.recruiter = recruiter;
    }

    
    @Column(name="status", nullable=false)
    public byte getStatus() {
        return this.status;
    }
    
    public void setStatus(byte status) {
        this.status = status;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="chatroom")
    public Set getMessages() {
        return this.messages;
    }
    
    public void setMessages(Set messages) {
        this.messages = messages;
    }




}


